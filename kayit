import sys
import sqlite3
from PyQt5.QtWidgets import (QApplication, QWidget, QLabel, QLineEdit, QPushButton,
                             QVBoxLayout, QMessageBox)

def veritabani_baglan():
    conn = sqlite3.connect('deprem_uygulamasi.db')
    return conn

def tablo_olustur():
    conn = veritabani_baglan()
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS kullanicilar (
            tc_kimlik TEXT PRIMARY KEY,
            sifre TEXT
        )
    ''')

    conn.commit()
    conn.close()

tablo_olustur()
class GirisKayitFormu(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle('Giriş / Kayıt')
        self.setGeometry(300, 300, 300, 200)

        self.tc_label = QLabel('TC Kimlik No:')
        self.tc_input = QLineEdit()

        self.sifre_label = QLabel('Şifre:')
        self.sifre_input = QLineEdit()
        self.sifre_input.setEchoMode(QLineEdit.Password)

        self.giris_button = QPushButton('Giriş')
        self.kayit_button = QPushButton('Kayıt')

        self.giris_button.clicked.connect(self.giris)
        self.kayit_button.clicked.connect(self.kayit)

        vbox = QVBoxLayout()
        vbox.addWidget(self.tc_label)
        vbox.addWidget(self.tc_input)
        vbox.addWidget(self.sifre_label)
        vbox.addWidget(self.sifre_input)
        vbox.addWidget(self.giris_button)
        vbox.addWidget(self.kayit_button)

        self.setLayout(vbox)

    def giris(self):
        tc = self.tc_input.text()
        sifre = self.sifre_input.text()

        conn = veritabani_baglan()
        cursor = conn.cursor()

        cursor.execute('SELECT * FROM kullanicilar WHERE tc_kimlik = ? AND sifre = ?', (tc, sifre))
        kullanici = cursor.fetchone()

        conn.close()

        if kullanici:
            QMessageBox.information(self, 'Giriş', 'Giriş başarılı!')
            # Burada diğer formlara geçiş yapılabilir
        else:
            QMessageBox.warning(self, 'Giriş', 'TC kimlik numarası veya şifre hatalı!')

    def kayit(self):
        tc = self.tc_input.text()
        sifre = self.sifre_input.text()

        conn = veritabani_baglan()
        cursor = conn.cursor()

        try:
            cursor.execute('INSERT INTO kullanicilar (tc_kimlik, sifre) VALUES (?, ?)', (tc, sifre))
            conn.commit()
            QMessageBox.information(self, 'Kayıt', 'Kayıt başarılı!')
        except sqlite3.IntegrityError:
            QMessageBox.warning(self, 'Kayıt', 'Bu TC kimlik numarası zaten kayıtlı!')

        conn.close()
if __name__ == '__main__':
    app = QApplication(sys.argv)
    giris_kayit_formu = GirisKayitFormu()
    giris_kayit_formu.show()
    sys.exit(app.exec_())